#+TITLE: Todo

* [ ] Core Features
- [ ] repeats of same arg but different values
- [X] parse args from passed in string
- [-] Allow values to be generated from expression
  + [X] core part
  + [ ] allow user to enter to shorthand ranges (no step, 0->n)
- [-] Better autocomplete experience
  + [ ] filter while typing
  + [ ] keep searching on backspace (look at COC)
  + [X] maybe a check if arg line function that checks if we are on arg line for tab and enter commands
- [ ] Support commands that have "main" arguments like grep
  - [ ] might need a reverse args if the flag should appear first
- [X] press question mark for help (keymappings)
- [X] Error messages instead of echos
- [-] Documentation
  - [X] doc mappings
  - [X] add the vim version requirements (json dependency)
  - [ ] brief example of the plugin
  - [ ] some sort of ascii cast or pictures
- [X] fix regex search on matches
  + [X] use `==#` (matchcase) instead of `==`
  + [X] the period disables it, try iskeyword?..
- [X] Make the autocomplete more convenient (tab)
  - [X] press enter to clear line and go into insert mode
    - [X] have blank line so they can type then tab through
  - [X] then press tab/shift-tab to go through options
  - [X] need to be able to activate autocomplete while in insert mode via tab
  - [X] clean up mappings
  - [X] allow users to customize this
  - [X] have this by default but have setting that disables the mappings
- [X] Read from config file
  + [X] JSON decoder
  + [X] validation?
- [X] Output dictionary
  + [X] Output header info
  + [X] Output eac arg
  + [X] output default value for each arg
- [X] Generate Command from buffer
  + [X] ignore header
  + [X] parse all args in buffer
  + [X] different logic for boolean vs string
    + [X] boolean - check if enabled(write in command) or disabled (dont write)
    + [X] string  - first check if disabled
  + [X] put all args together into 1 command
  + [X] output the command
  + [X] if string has disabled keyword dont include
- [X] Allow user to edit buffer
  - [X] basic autocomplete
  - [X] actually do pattern matching
  - [X] it wont autocomplete for second time? stateful
- [X] Plugin Component
  + [X] command to actually enter the mode
  + [X] correct way to do plugin completion
  + [X] detect filetye
  + [X] set the config file somewhere
  + [X] fix the global thing of the vui config var
- [X] How should i output the command?
  - [X] fix how we call it
  - [X] output to buffer
  - [X] output to shell
  - [X] output the command
  - [X] create commands for each
  - [X] make the commands local to buffer
- [X] Work with more than 1 CLI tool
  - [X] modify the json
  - [X] could just create a command for selection
  - [X] filtering when searching tool
  - [X] modify vui script for local config
    - [X] extract name from buffer name
    - [X] look through config for that value and set buffer dictionary to that value
    - [X] use that value throught out the config
  - [X] arg match completion
  - [X] use buffer local settings
  - [X] small error saying it cant read value?
- [X] Make vui buffer unassociated with a file so its more like a tool
  - [X]allow user to close the buffer without being asked to save
- [X] Remove the file name dependency
- [X] Command that outputs results to file of your choice
  - [X] Get the file name from user
  - [X] Create the file and write results
    - [X] search for '=Results='
    - [X] =.,$write <file-name>=
- [X] refactor the get arg and value function and use that everywhere
- [X] localleader (or just buffer local) commands
  - [X] outputcommand:
  - [X] execute:
  - [X] printtobuffer:
  - [X] writetofile:
  - [X] clear value of current line and go into autocomplete mode
  - [X] toggle mapping (enabled to disabled and reverse)
  - [X] use =<Plug>=
- [X] syntax highlighting for command
- [X] check version
- [X] make it save results instead of write results (w -> s)
- [X] allow user to make their own tab mappings
* Extra Features
- [ ] allow user to add arguments on the fly (not already in config)
- [ ] Allow values to be read from separate file
- [ ] output the type as part of the argument (just a 2 character code)
- [ ] use autoload
- [ ] custom formatting for final arg output
- [ ] have the actual command in the buffer as well so user can edit it if needed
- [ ] have config separated into different files in the same directory
- [ ] conceal for syntax
- [ ] cust formatting for executing output
- [ ] multipart field?
  + [ ] this can be used for a date (month, day, year)
  + [ ] need a joiner string
- [ ] use dispatch
- [ ] ssh command support
- [ ] time field
  + [ ] this could be a multifield
  + [ ] increment/decrement
- [ ] Make autocomplete faster, use the async thing you saw in help
- [ ] substring matching (instead of first word)
- [ ] setting to unmap the tab and enter mappings?
* Robustness
- [X] function for mappings if they already exist
- [ ] use same regex for higlgithing and searching
- [ ] use shellescape() vim function when executing command
- [ ] only read args inside an arg section
- [ ] Put all of the state in the buffer itself rather than saving in memory (not sure about this one)
  - [ ] have the type in the field
  - [ ] somehow have the values
  - [ ] have the command listed as well
